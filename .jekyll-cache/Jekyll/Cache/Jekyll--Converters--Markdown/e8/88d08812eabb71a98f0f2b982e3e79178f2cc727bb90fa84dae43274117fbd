I"a&<!-- <span class="tag tag--draft">Not started</span> -->
<!-- <span class="tag tag--progress">In progress</span> -->
<!-- <span class="tag tag--review">Ready for review</span> -->
<p><span class="tag tag--approved">Approved</span></p>

<p class="content__abstract">
  This article explains the actions you will take on the Day of Code to get your starter kit.
</p>

<p>We’ve written a starter kit that contains some code libraries you’ll need for today, which you’re about to download from the code repository website Github. Rather than clicking around the file navigator on your computer, you’ll use the command line to download it. Go ahead and follow the instructions below to get started.</p>

<h2 id="navigate-to-the-root-of-your-computer">Navigate to the root of your computer</h2>

<p>Open <a href="glossary#terminal">Terminal</a> (Mac) or the <a href="glossary#command-prompt">Command Prompt</a> (Windows), and, at the command line, type the following and press enter.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  <span class="nb">cd</span></code></pre></figure>

<p><code class="highlighter-rouge">cd</code> stands for “change directory”, and it has changed the directory you’re in to the root of your computer. You could have done the same by going to your file navigator on your computer (Finder or File Explorer) and clicking on the relevant folder, but you’re doing programming now, so you’ll use the command line, which is quicker and more controllable.</p>

<h2 id="make-a-new-directory">Make a new directory</h2>

<p>Next, you’re going to create a new directory in which you’ll keep your code. Type the following and press enter.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  <span class="nb">mkdir </span>repos</code></pre></figure>

<p><code class="highlighter-rouge">mkdir</code> stands for “make directory”. You have made a directory called “repos” (short for <a href="/glossary#repositories">repositories</a>).</p>

<h2 id="navigate-to-your-new-directory">Navigate to your new directory</h2>

<p>Now you need to change into your new directory, so you can download the starter kit into the correct place on your computer. Type the following and press enter.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  <span class="nb">cd </span>repos</code></pre></figure>

<p>You have changed into the repos directory.</p>

<h2 id="download-the-files">Download the files</h2>

<p>The command line has access to the internet. Copy and paste the following and press enter.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  git clone <span class="nt">-b</span> starter-kit <span class="nt">--single-branch</span> https://github.com/GeneralProducts/publisher-website.git</code></pre></figure>

<p>Your terminal window looks a bit like this:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  Emma@Emmas-MBP-3 repos <span class="nv">$ </span> git clone <span class="nt">-b</span> starter-kit <span class="nt">--single-branch</span> https://github.com/GeneralProducts/publisher-website.git
  Cloning into <span class="s1">'publisher-website'</span>...
  remote: Enumerating objects: 42, <span class="k">done</span><span class="nb">.</span>
  remote: Counting objects: 100% <span class="o">(</span>42/42<span class="o">)</span>, <span class="k">done</span><span class="nb">.</span>
  remote: Compressing objects: 100% <span class="o">(</span>36/36<span class="o">)</span>, <span class="k">done</span><span class="nb">.</span>
  remote: Total 42 <span class="o">(</span>delta 5<span class="o">)</span>, reused 40 <span class="o">(</span>delta 3<span class="o">)</span>, pack-reused 0
  Unpacking objects: 100% <span class="o">(</span>42/42<span class="o">)</span>, <span class="k">done</span><span class="nb">.</span>
  Emma@Emmas-MBP-3 repos <span class="err">$</span></code></pre></figure>

<h2 id="navigate-to-the-starter-kit-directory">Navigate to the starter kit directory</h2>

<p>You have downloaded the code into your “repos” directory, in a sub-directory called “publisher-website”. Change into this “publisher-website” directory by typing the following and pressing enter.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  <span class="nb">cd </span>publisher-website</code></pre></figure>

<p>You are now within the “publisher-website” directory.</p>

<h2 id="process-the-files">Process the files</h2>

<p>Type <code class="highlighter-rouge">ls</code>, which is the command for “list files”, to see a list of the files in your “publisher-website” directory. You will see something like this:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  Emma@Emmas-MBP-3 publisher-website <span class="o">(</span>starter-kit<span class="o">)</span> <span class="nv">$ </span><span class="nb">ls
  </span>Gemfile       README.md   _plugins  images      lib
  Gemfile.lock  _config.yml css       index.html
  Emma@Emmas-MBP-3 publisher-website <span class="o">(</span>starter-kit<span class="o">)</span> <span class="err">$</span></code></pre></figure>

<p>You are going to run a command to make the Ruby code libraries (known as “gems”, rather charmingly) in the Gemfile file work on your computer. Type the following and press enter.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  bundle</code></pre></figure>

<p>Your terminal window looks a bit like this:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  Emma@Emmas-MBP-3 publisher-website <span class="o">(</span>starter-kit<span class="o">)</span> <span class="nv">$ </span>bundle
  Using public_suffix 3.0.3
  Using addressable 2.6.0
  Using bundler 1.16.0
  Using colorator 1.1.0
  Using crass 1.0.4
  Using ffi 1.11.1
  Using forwardable-extended 2.6.0
  Using rb-fsevent 0.10.3
  Using rb-inotify 0.10.0
  Using sass-listen 4.0.0
  Using sass 3.7.4
  Using jekyll-sass-converter 1.5.2
  Using ruby_dep 1.5.0
  Using listen 3.1.5
  Using jekyll-watch 1.5.1
  Using kramdown 1.17.0
  Using liquid 3.0.6
  Using mercenary 0.3.6
  Using pathutil 0.16.2
  Using rouge 1.11.1
  Using safe_yaml 1.0.5
  Using jekyll 3.3.1
  Using mini_portile2 2.3.0
  Using nokogiri 1.8.1
  Using nori 2.6.0
  Using lisbn 0.2.4
  Using nokogumbo 1.5.0
  Using sanitize 4.6.6
  Bundle <span class="nb">complete</span><span class="o">!</span> 4 Gemfile dependencies, 28 gems now installed.
  Use <span class="sb">`</span>bundle info <span class="o">[</span>gemname]<span class="sb">`</span> to see where a bundled gem is installed.
  Emma@Emmas-MBP-3 publisher-website <span class="o">(</span>starter-kit<span class="o">)</span> <span class="err">$</span></code></pre></figure>

<h2 id="start-a-server-running-on-your-computer">Start a server running on your computer</h2>

<p>Now you are ready to run the code you have downloaded. You do this by starting a server.  Type the following and press enter.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  jekyll serve</code></pre></figure>

<p>Your terminal window looks a bit like this:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  Emma@Emmas-MBP-3 publisher-website <span class="o">(</span>starter-kit<span class="o">)</span> <span class="nv">$ </span>jekyll serve
  Configuration file: /Users/Emma/repos/publisher-website/_config.yml
  Configuration file: /Users/Emma/repos/publisher-website/_config.yml
              Source: /Users/Emma/repos/publisher-website
        Destination: /Users/Emma/repos/publisher-website/_site
  Incremental build: disabled. Enable with <span class="nt">--incremental</span>
        Generating... <span class="k">done in </span>0.049 seconds.
  Auto-regeneration: enabled <span class="k">for</span> <span class="s1">'/Users/Emma/repos/publisher-website'</span>
  Configuration file: /Users/Emma/repos/publisher-website/_config.yml
      Server address: http://127.0.0.1:4000/
    Server running... press ctrl-c to stop.</code></pre></figure>

<h2 id="view-the-code-running-in-a-browser">View the code running in a browser</h2>

<p>In a browser window, such as Chrome, type “localhost:4000” in as the website address. This gives you access to the website that’s now running on your own computer, as opposed to on the internet. Your browser window looks a bit like this:</p>

<p><img src="assets/images/its-worked.png" alt="" /></p>

<h2 id="view-the-code-in-your-editor">View the code in your editor</h2>

<p>On the command line, type the following and press enter. That dot is a full stop.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">  code .</code></pre></figure>

<p>The code opens in your text editor. It will look something like this:</p>

<p><img src="/assets/images/editor.png" alt="" /></p>

<p>These are the files that make up your app. Double click on <code class="highlighter-rouge">index.html</code>. It looks a bit like this:</p>

<p><img src="/assets/images/index.png" alt="" /></p>

<p>Notice that the words “it’s worked” appear in the file. This is the HTML file that you are viewing in your browser.
Browers can interpret and display HTML files.</p>

<h2 id="what-youve-learned">What you’ve learned</h2>

<p>A lot!</p>

<ul>
  <li>How to navigate around your computer on the command line</li>
  <li>How to download files from GitHub</li>
  <li>How to install Ruby gems on your computer</li>
  <li>How to run a server on your computer and see the results in a browser</li>
</ul>

<p>Next, you’re going to be guided through the process today to turn this skeleton of files into a dynamic web app.</p>
:ET